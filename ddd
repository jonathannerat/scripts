#!/bin/perl

use v5.14;
use Getopt::Long qw(:config pass_through);
use IPC::Run3;

my $attempts = 3;
my $edit = 0;

GetOptions ( 'edit' => \$edit, 'attempts=s' => \$attempts);

sub doas_try {
    my @cmd = ('doas', @_);
    my $auth_error = 'doas: Authentication failed' . "\n";
    my $stderr = $auth_error;

    for my $attempt (1..$attempts) {
        run3 \@cmd, undef, undef, \$stderr;

        if ($stderr eq $auth_error) {
            say STDERR 'ddd: Authentication failed ' . "[$attempt/$attempts]";
        } else {
            last;
        }
    }
}

if ($edit) {
    # TODO: add edit support like 'sudo -e'
    # To authenticate the user only once, we could have another script (like
    # ddd-edit) do the actual editing logic, with all the arguments received
    # here passed through.
    # ddd-edit should check each file passed is a file, and the with sudo
    # privileges it should read each file into a user writeable tmp file which
    # resembles the original filename: /etc/doas.conf > /tmp/doasXXXXXXX.conf
    # Then, choose an editor either with $EDITOR or $DDD_EDITOR, and run that
    # editor with all tmp file as arguments, with the user privileges (su -u
    # $UID). To do that, we should also have $UID passed as a parameter to
    # ddd-edit
    die "not yet :(";
} else {
    doas_try @ARGV;
}
